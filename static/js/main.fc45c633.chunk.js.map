{"version":3,"sources":["MainPage.tsx","LoginPage.tsx","index.tsx"],"names":["initialState","color","inputText","update","state","msg","Error","Foo","React","useReducer","dispatch","buttonStyle","backgroundColor","fontSize","fontWeight","padding","border","cursor","tdthStyle","textAlign","style","fontFamily","borderCollapse","width","onClick","type","initialButton","clickOk","updateButton","FormPerson","useForm","handleSubmit","register","useState","aname","setInputValue","http","XMLHttpRequest","history","useHistory","onSubmit","data","console","log","className","htmlFor","value","onChange","ev","target","push","open","setRequestHeader","send","JSON","stringify","LoginPage","exact","path","component","render","document","getElementById"],"mappings":"2PAIMA,EAAuB,CAACC,MAAQ,OAASC,UAAY,iBAK3D,SAASC,EAAOC,EAAeC,GAC3B,OAAQD,EAAMH,OACZ,IAAK,OAEH,MADiB,CAACC,UAAW,kBAAoBD,MAAQ,SAE3D,IAAK,QACH,MAAO,CAACA,MAAQ,OAASC,UAAY,iBACvC,QACE,MAAM,IAAII,OAIX,IAAMC,EAAM,WACjB,MAA0BC,IAAMC,WAAWN,EAAQH,GAAnD,mBAAOI,EAAP,KAAcM,EAAd,KAMMC,EAA+B,CACnCC,gBAAkBR,EAAMH,MACxBY,SAAU,OACVC,WAAY,IACZC,QAAS,iBACTC,OAAQ,kBACRC,OAAQ,WASJC,EAA6B,CAC/BF,OAAQ,oBACRG,UAAW,OACXJ,QAAS,OAUX,OACE,8BACN,8BACE,6BACA,2BAAOK,MAvB6B,CAChCC,WAAY,oBACZC,eAAgB,WAChBC,MAAO,SAqBX,4BACE,oCACA,wCAEF,4BACE,wBAAIH,MAAUF,GAAd,uBACA,wBAAKE,MAAUF,KAEjB,4BACE,wBAAKE,MAAUF,GAAf,mBACA,wBAAKE,MAAUF,KAEjB,4BACE,wBAAKE,MAAUF,GAAf,gBACA,wBAAKE,MAAUF,KAEjB,4BACE,wBAAKE,MAAUF,GAAf,iBACA,wBAAKE,MAAUF,KAEjB,4BACE,wBAAKE,MAAUF,GAAf,mBACA,wBAAKE,MAAUF,KAEjB,4BACE,wBAAKE,MAAUF,GAAf,oBACA,wBAAKE,MAAUF,OAOnB,6BACQ,4BAAQE,MAAOT,EAAaa,QAAS,kBAAMd,EAAS,CAACe,KAAO,kBAAkBrB,EAAMF,e,gBCnFtFwB,EAA4B,CAACzB,MAAQ,OAASC,UAAY,QAASyB,SAAU,GAMnF,SAASC,EAAaxB,EAAmBC,GACvC,OAAQD,EAAMH,OACZ,IAAK,OAEH,MADiB,CAACA,MAAQ,OAAOC,UAAW,OAAQyB,SAAU,GAEhE,IAAK,OACH,OAAOD,EACT,QACE,MAAM,IAAIpB,OAIT,IAAMuB,EAAa,WACxB,MAA0BrB,IAAMC,WAAWmB,EAAcF,GAAzD,mBAAOtB,EAAP,KAIA,GAJA,KAImC0B,eAAjBC,GAAlB,EAAQC,SAAR,EAAkBD,cAMZpB,EAA+B,CACnCC,gBAAkBR,EAAMH,OAG1B,EAA+BgC,mBAAiB,QAAhD,mBAAOC,EAAP,KAAcC,EAAd,KACIC,EAAO,IAAIC,eAITC,EAAUC,cAQhB,OACF,6BACI,0BAAMC,SAAUT,GAvBD,SAACU,GAChBC,QAAQC,IAAI,OAAQF,OAuBlB,yBAAKG,UAAU,OACf,4BAAQA,UAAU,cAChB,qDAKF,yBAAKA,UAAU,SACb,2BAAOC,QAAQ,QAAf,QAGA,2BACIpB,KAAK,OACLqB,MAAOZ,EACPa,SAAU,SACNC,GADM,OAECb,EAAca,EAAGC,OAAOH,WAIzC,4BAAQ1B,MAAOT,EAAcc,KAAK,SAASD,QA9B3B,WAClBc,EAAQY,KAAK,QACbd,EAAKe,KAAK,OANF,wCAMe,GACvBf,EAAKgB,iBAAiB,eAAgB,kCACtChB,EAAKiB,KAAKC,KAAKC,UAAU,CAAG,KAAQrB,OA0BlC,gBCxEAsB,E,4JACJ,WACE,OACE,gBAAC,IAAD,KACE,2BACE,gBAAC,IAAD,KACD,gBAAC,IAAD,CAAOC,OAAK,EAACC,KAAK,IAAIC,UAAW9B,IAC9B,gBAAC,IAAD,CAAO4B,OAAK,EAACC,KAAK,OAAOC,UAAWpD,W,GAPxBC,aAexBoD,iBAAO,gBAAC,EAAD,MAAeC,SAASC,eAAe,W","file":"static/js/main.fc45c633.chunk.js","sourcesContent":["import React from 'react';\r\nimport CSS from 'csstype';\r\n\r\ninterface State {color : string  , inputText : string }\r\nconst initialState : State = {color : \"blue\" , inputText : \"you can speak\"};\r\n\r\ntype PressButton = {type : \"PressButton\" }; \r\ntype Msg = PressButton\r\n\r\nfunction update(state : State, msg : Msg) {\r\n    switch (state.color) {\r\n      case \"blue\":\r\n        const newState = {inputText: 'you\\'re speaking', color : 'green'};\r\n        return newState;\r\n      case \"green\":\r\n        return {color : \"blue\" , inputText : \"you can speak\"};\r\n      default:\r\n        throw new Error();\r\n    }\r\n  }\r\n\r\nexport const Foo = () => { {\r\n  const [state, dispatch] = React.useReducer(update, initialState);\r\n    /*\r\n    (\"speak\" \"blue\") (clic =>) (\"you're speaking\" \"green\" )   (clic => ) (\"finish\" \"blue\")\r\n    (\"speak\" \"blue\")           (\"--- is speaking\" , \"red\")               (\"speak\" \"blue\")\r\n    */ \r\n   \r\n  const buttonStyle : CSS.Properties = {\r\n    backgroundColor : state.color ,\r\n    fontSize: '30px',\r\n    fontWeight: 200,\r\n    padding: '13px 50px 13px',\r\n    border: '3px solid black',\r\n    cursor: 'pointer'\r\n  };\r\n\r\n  const tableStyle : CSS.Properties = {\r\n      fontFamily: \"arial, sans-serif\",\r\n      borderCollapse: \"collapse\",\r\n      width: \"100%\"\r\n    }\r\n\r\n  const tdthStyle : CSS.Properties = {\r\n      border: \"1px solid #dddddd\",\r\n      textAlign: \"left\",\r\n      padding: \"8px\"\r\n  }\r\n  \r\n  const trStyle : CSS.Properties = {\r\n     // tr:nth-child(even)\r\n      backgroundColor: \"#dddddd\"\r\n    }\r\n\r\n\r\n\r\n    return (\r\n      <html>\r\n<body>\r\n  <div> \r\n  <table style  = {tableStyle}>\r\n  <tr>\r\n    <th>Name</th>\r\n    <th>Counter</th>\r\n  </tr>\r\n  <tr>\r\n    <td style = { tdthStyle}>Alfreds Futterkiste</td>\r\n    <td  style = { tdthStyle}></td>\r\n  </tr>\r\n  <tr>\r\n    <td  style = { tdthStyle}>Francisco Chang</td>\r\n    <td  style = { tdthStyle}></td>\r\n  </tr>\r\n  <tr>\r\n    <td  style = { tdthStyle}>Ernst Handel</td>\r\n    <td  style = { tdthStyle}></td>\r\n  </tr>\r\n  <tr>\r\n    <td  style = { tdthStyle}>Helen Bennett</td>\r\n    <td  style = { tdthStyle}></td>\r\n  </tr>\r\n  <tr>\r\n    <td  style = { tdthStyle}>Yoshi Tannamuri</td>\r\n    <td  style = { tdthStyle}></td>\r\n  </tr>\r\n  <tr>\r\n    <td  style = { tdthStyle}>Giovanni Rovelli</td>\r\n    <td  style = { tdthStyle}></td>\r\n  </tr>\r\n</table>\r\n\r\n\r\n\r\n     </div>\r\n<div >\r\n        <button style={buttonStyle} onClick={() => dispatch({type : \"PressButton\"})}>{state.inputText}</button>\r\n    </div>\r\n   \r\n\r\n   </body>\r\n   </html>\r\n   )}}","import  React , {useState} from \"react\";\nimport \"./LoginPage.css\";\nimport CSS from 'csstype';\nimport { useForm } from \"react-hook-form\";\nimport { useHistory, HashRouter as Router, Route, Link, Switch,RouteComponentProps } from 'react-router-dom'\n\ntype Person = {\n  name: string;\n};\n\n\ninterface LogButton {color : string  , inputText : string , clickOk : Boolean }\nconst initialButton : LogButton = {color : \"blue\" , inputText : \"login\", clickOk : true};\n\n\ntype PressButton = {type : \"PressButton\" }; \ntype Msg = PressButton\n\nfunction updateButton(state : LogButton, msg : Msg) {\n  switch (state.color) {\n    case \"blue\":\n      const newState = {color : 'grey',inputText: 'wait', clickOk : false};\n      return newState;\n    case \"grey\":\n      return initialButton;\n    default:\n      throw new Error();\n  }\n}\n\nexport const FormPerson = () => {\n  const [state, dispatch] = React.useReducer(updateButton, initialButton);\n \n  \n\n  const { register, handleSubmit } = useForm<Person>();\n\n  const onSubmit = (data: Person) => {\n    console.log(\"data\", data);\n  };\n\n  const buttonStyle : CSS.Properties = {\n    backgroundColor : state.color ,\n  };\n\n  const [aname, setInputValue] = useState<string>(\"vide\");\n  var http = new XMLHttpRequest();\n  var url = 'http://192.168.1.32:8080/allspeakers';\n // var url = 'http://127.0.0.1:8080/allspeakers';\n  \n  const history = useHistory();\n  const handleRoute = () =>{ \n    history.push(\"/foo\");\n    http.open('POST', url, true);\n    http.setRequestHeader('Content-type', 'application/json;charset=UTF-8');\n    http.send(JSON.stringify({  \"name\": aname }));\n  }\n  \n  return (\n<div>\n    <form onSubmit={handleSubmit(onSubmit)}>\n      <div className=\"App\">\n      <header className=\"App-header\">\n        <p>\n        Welcome to Chrono Team \n        </p>\n \n     \n      <div className=\"field\">\n        <label htmlFor=\"name\">Name</label>\n\n\n        <input\n            type=\"text\"\n            value={aname}\n            onChange={(\n                ev: React.ChangeEvent<HTMLInputElement>,\n            ): void => setInputValue(ev.target.value)}\n        />\n\n      </div>\n      <button style={buttonStyle}  type=\"submit\" onClick= {handleRoute}>Log in </button>   \n      </header>\n      </div>\n    </form>\n    </div>\n  )\n}\n\n\n\n","\nimport * as React from 'react'\nimport { HashRouter as Router, Route, Link, Switch } from 'react-router-dom'\nimport { render } from 'react-dom';\nimport {Foo} from './MainPage';\nimport {FormPerson} from './LoginPage';\n\n\n\nclass LoginPage extends React.Component { \n  render() {\n    return (\n      <Router>\n        <div>\n          <Switch>\n         <Route exact path=\"/\" component={FormPerson} />\n            <Route exact path=\"/foo\" component={Foo} />\n          </Switch>\n        </div>\n      </Router>\n    );\n  }\n}\n\nrender(<LoginPage />, document.getElementById('root'));\n"],"sourceRoot":""}